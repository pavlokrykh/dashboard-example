@use 'variables' as *;

// Status color map
$status-colors: (
  'success': $status-success-color,
  'warning': $status-warning-color,
  'danger': $status-danger-color,
  'primary': $primary-color,
  'secondary-darker': $secondary-darker
);

// Dot badge styles - background only on ::before pseudo-element
.status-badge {
  @each $status, $color in $status-colors {
    &.status-#{$status}::before {
      background-color: #{$color};
    }
  }
}

// Pill badge styles - full background color
.status-badge-pill {
  @each $status, $color in $status-colors {
    &.status-#{$status} {
      background-color: #{$color};
    }
  }
}

// Legacy status styles for other components (not status badges or progress bars)
:not(.status-badge):not(.status-badge-pill):not(.status-badge-circle):not(.progress-bar) {
  @each $status, $color in $status-colors {
    &.status-#{$status} {
      background-color: #{$color};
    }
  }
}

// Mixin for generating status variants for other components
@mixin status-variant($property: background-color) {
  @each $status, $color in $status-colors {
    :not(.status-badge):not(.status-badge-pill):not(.status-badge-circle):not(.progress-bar).status-#{$status} {
      @if $property == border-bottom-color {
        &-arrow {
          #{$property}: #{$color};
        }
      } @else if $property == color {
        &-text {
          #{$property}: #{$color};
        }
      } @else {
        #{$property}: #{$color};
      }
    }
  }
}

// Legacy status styles for specific old badges
.status-new::before {
  background-color: $primary-color;
}

.status-pending::before {
  background-color: $status-warning-color;
}

.status-completed::before {
  background-color: $status-success-color;
}

// Generate status variants for other components (excluding status badges)
@include status-variant(color);
@include status-variant(border-bottom-color);